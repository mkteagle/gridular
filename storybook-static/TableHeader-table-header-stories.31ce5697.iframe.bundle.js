/*! For license information please see TableHeader-table-header-stories.31ce5697.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunkgridular=self.webpackChunkgridular||[]).push([[765],{"./node_modules/lucide-react/dist/esm/createLucideIcon.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>createLucideIcon});var react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js");const mergeClasses=(...classes)=>classes.filter(((className,index,array)=>Boolean(className)&&""!==className.trim()&&array.indexOf(className)===index)).join(" ").trim();var defaultAttributes={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round"};const Icon=(0,react.forwardRef)((({color="currentColor",size=24,strokeWidth=2,absoluteStrokeWidth,className="",children,iconNode,...rest},ref)=>(0,react.createElement)("svg",{ref,...defaultAttributes,width:size,height:size,stroke:color,strokeWidth:absoluteStrokeWidth?24*Number(strokeWidth)/Number(size):strokeWidth,className:mergeClasses("lucide",className),...rest},[...iconNode.map((([tag,attrs])=>(0,react.createElement)(tag,attrs))),...Array.isArray(children)?children:[children]]))),createLucideIcon=(iconName,iconNode)=>{const Component=(0,react.forwardRef)((({className,...props},ref)=>{return(0,react.createElement)(Icon,{ref,iconNode,className:mergeClasses(`lucide-${string=iconName,string.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase()}`,className),...props});var string}));return Component.displayName=`${iconName}`,Component}},"./stories/TableHeader/table-header.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CustomHeader:()=>CustomHeader,CustomSortIcon:()=>CustomSortIcon,Default:()=>Default,Interactive:()=>Interactive,WithActiveFilter:()=>WithActiveFilter,WithActiveSort:()=>WithActiveSort,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),_components_data_grid_table_header__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./components/data-grid/table-header.tsx"),_components_theme_provider_theme_provider__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./components/theme-provider/theme-provider.tsx"),console=__webpack_require__("./node_modules/console-browserify/index.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Data Grid/TableHeader",component:_components_data_grid_table_header__WEBPACK_IMPORTED_MODULE_2__.A,parameters:{layout:"centered"},tags:["autodocs"],decorators:[Story=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_theme_provider_theme_provider__WEBPACK_IMPORTED_MODULE_3__.NP,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("table",{className:"border-collapse w-full",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(Story,{})})})]},columns=[{id:"name",header:"Name"},{id:"email",header:"Email"},{id:"role",header:"Role"},{id:"status",header:"Status",enableSorting:!1},{id:"lastActive",header:"Last Active",enableFiltering:!1}],Default={args:{columns,sortState:null,onSortChange:columnId=>{console.log(`Sort clicked on column ${columnId}`)},enableSorting:!0,filterState:{},filterMenuOpen:null,onFilterMenuToggle:columnId=>{console.log(`Filter menu toggled for column ${columnId}`)},columnWidths:{name:150,email:200,role:150,status:150,lastActive:180},onColumnResize:(columnId,width)=>{console.log(`Resize column ${columnId} to ${width}px`)},filterValueRefs:{current:{}},onApplyFilter:value=>{console.log(`Apply filter: ${value}`)},onClearFilter:()=>{console.log("Clear filter")},onColumnReorder:(draggedId,targetId)=>{console.log(`Reorder columns: ${draggedId} -> ${targetId}`)}}},WithActiveSort={args:{...Default.args,sortState:{column:"name",direction:"asc"}}},WithActiveFilter={args:{...Default.args,filterState:{name:"John"}}},Interactive={render:args=>{const InteractiveTableHeader=()=>{const[sortState,setSortState]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null),[filterState,setFilterState]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({}),[filterMenuOpen,setFilterMenuOpen]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null),[columnWidths,setColumnWidths]=(0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({name:150,email:200,role:150,status:150,lastActive:180}),filterValueRefs=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)({});return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_components_data_grid_table_header__WEBPACK_IMPORTED_MODULE_2__.A,{...args,columns,sortState,onSortChange:columnId=>{setSortState((prev=>(null==prev?void 0:prev.column)===columnId?"asc"===prev.direction?{column:columnId,direction:"desc"}:null:{column:columnId,direction:"asc"}))},filterState,filterMenuOpen,onFilterMenuToggle:columnId=>{setFilterMenuOpen((prev=>prev===columnId?null:columnId))},columnWidths,onColumnResize:(columnId,width)=>{setColumnWidths((prev=>({...prev,[columnId]:width})))},filterValueRefs,onApplyFilter:value=>{filterMenuOpen&&(setFilterState((prev=>({...prev,[filterMenuOpen]:value}))),setFilterMenuOpen(null))},onClearFilter:()=>{if(filterMenuOpen){const newFilterState={...filterState};delete newFilterState[filterMenuOpen],setFilterState(newFilterState),setFilterMenuOpen(null)}},onColumnReorder:(draggedId,targetId)=>{console.log(`Reorder columns: ${draggedId} -> ${targetId}`)}})};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(InteractiveTableHeader,{})}},CustomHeader={args:{...Default.args,renderHeader:(column,sortDirection)=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"flex items-center gap-2 text-primary",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("span",{children:"★"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("span",{children:column.header}),sortDirection&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("span",{children:"asc"===sortDirection?"↑":"↓"})]})}},CustomSortIcon={args:{...Default.args,renderSortIcon:(_column,sortDirection)=>sortDirection?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("span",{className:"ml-1",children:"asc"===sortDirection?"▲":"▼"}):(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("span",{className:"ml-1 text-gray-300",children:"○"})}},__namedExportsOrder=["Default","WithActiveSort","WithActiveFilter","Interactive","CustomHeader","CustomSortIcon"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  args: {\n    columns,\n    sortState: null,\n    onSortChange: columnId => {\n      console.log(`Sort clicked on column ${columnId}`);\n    },\n    enableSorting: true,\n    filterState: {},\n    filterMenuOpen: null,\n    onFilterMenuToggle: columnId => {\n      console.log(`Filter menu toggled for column ${columnId}`);\n    },\n    columnWidths: {\n      name: 150,\n      email: 200,\n      role: 150,\n      status: 150,\n      lastActive: 180\n    },\n    onColumnResize: (columnId, width) => {\n      console.log(`Resize column ${columnId} to ${width}px`);\n    },\n    filterValueRefs: {\n      current: {}\n    },\n    onApplyFilter: value => {\n      console.log(`Apply filter: ${value}`);\n    },\n    onClearFilter: () => {\n      console.log("Clear filter");\n    },\n    onColumnReorder: (draggedId, targetId) => {\n      console.log(`Reorder columns: ${draggedId} -> ${targetId}`);\n    }\n  }\n}',...Default.parameters?.docs?.source}}},WithActiveSort.parameters={...WithActiveSort.parameters,docs:{...WithActiveSort.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Default.args,\n    sortState: {\n      column: "name",\n      direction: "asc"\n    }\n  }\n}',...WithActiveSort.parameters?.docs?.source}}},WithActiveFilter.parameters={...WithActiveFilter.parameters,docs:{...WithActiveFilter.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Default.args,\n    filterState: {\n      name: "John"\n    }\n  }\n}',...WithActiveFilter.parameters?.docs?.source}}},Interactive.parameters={...Interactive.parameters,docs:{...Interactive.parameters?.docs,source:{originalSource:'{\n  render: args => {\n    const InteractiveTableHeader = () => {\n      const [sortState, setSortState] = useState<{\n        column: string;\n        direction: "asc" | "desc";\n      } | null>(null);\n      const [filterState, setFilterState] = useState<Record<string, string>>({});\n      const [filterMenuOpen, setFilterMenuOpen] = useState<string | null>(null);\n      const [columnWidths, setColumnWidths] = useState({\n        name: 150,\n        email: 200,\n        role: 150,\n        status: 150,\n        lastActive: 180\n      });\n      const filterValueRefs = useRef<Record<string, string>>({});\n      const handleSortChange = (columnId: string) => {\n        setSortState(prev => {\n          if (prev?.column === columnId) {\n            return prev.direction === "asc" ? {\n              column: columnId,\n              direction: "desc"\n            } : null;\n          }\n          return {\n            column: columnId,\n            direction: "asc"\n          };\n        });\n      };\n      const handleFilterMenuToggle = (columnId: string | null) => {\n        setFilterMenuOpen(prev => prev === columnId ? null : columnId);\n      };\n      const handleApplyFilter = (value: string) => {\n        if (filterMenuOpen) {\n          setFilterState(prev => ({\n            ...prev,\n            [filterMenuOpen]: value\n          }));\n          setFilterMenuOpen(null);\n        }\n      };\n      const handleClearFilter = () => {\n        if (filterMenuOpen) {\n          const newFilterState = {\n            ...filterState\n          };\n          delete newFilterState[filterMenuOpen];\n          setFilterState(newFilterState);\n          setFilterMenuOpen(null);\n        }\n      };\n      return <TableHeader {...args} columns={columns} sortState={sortState} onSortChange={handleSortChange} filterState={filterState} filterMenuOpen={filterMenuOpen} onFilterMenuToggle={handleFilterMenuToggle} columnWidths={columnWidths} onColumnResize={(columnId, width) => {\n        setColumnWidths(prev => ({\n          ...prev,\n          [columnId]: width\n        }));\n      }} filterValueRefs={filterValueRefs} onApplyFilter={handleApplyFilter} onClearFilter={handleClearFilter} onColumnReorder={(draggedId, targetId) => {\n        console.log(`Reorder columns: ${draggedId} -> ${targetId}`);\n      }} />;\n    };\n    return <InteractiveTableHeader />;\n  }\n}',...Interactive.parameters?.docs?.source}}},CustomHeader.parameters={...CustomHeader.parameters,docs:{...CustomHeader.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Default.args,\n    renderHeader: (column, sortDirection) => <div className="flex items-center gap-2 text-primary">\n        <span>★</span>\n        <span>{column.header}</span>\n        {sortDirection && <span>{sortDirection === "asc" ? "↑" : "↓"}</span>}\n      </div>\n  }\n}',...CustomHeader.parameters?.docs?.source}}},CustomSortIcon.parameters={...CustomSortIcon.parameters,docs:{...CustomSortIcon.parameters?.docs,source:{originalSource:'{\n  args: {\n    ...Default.args,\n    renderSortIcon: (_column, sortDirection: "asc" | "desc" | null) => sortDirection ? <span className="ml-1">{sortDirection === "asc" ? "▲" : "▼"}</span> : <span className="ml-1 text-gray-300">○</span>\n  }\n}',...CustomSortIcon.parameters?.docs?.source}}}}}]);